@model ProjectCDTT_63132701.Models.SanPham

@{
    ViewBag.Title = "Chỉnh sửa sản phẩm";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<head>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <link rel="stylesheet" href="~/Content/create.css" />
</head>

<div class=" form-wrapper">
    <a href="javascript:history.back()" class="back-button">
        <i class="fa-solid fa-chevron-left"></i> Quay lại
    </a>
    <h2 class="mb-4">Chỉnh sửa sản phẩm</h2>

    @using (Html.BeginForm("Edit", "san_pham", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.MaSP)

        <div class="row">
            <div class="col-md-6">
                <div class="mb-3">
                    @Html.LabelFor(model => model.TenSP, "Tên sản phẩm", new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.TenSP, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.TenSP, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.MoTa, "Mô tả", new { @class = "form-label" })
                    @Html.TextAreaFor(model => model.MoTa, new { @class = "form-control", rows = 3 })
                    @Html.ValidationMessageFor(model => model.MoTa, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.DonGia, "Đơn giá", new { @class = "form-label" })
                    @Html.TextBoxFor(m => m.DonGia, new { @class = "form-control", type = "number", min = "50000", step = "10000" })
                    @Html.ValidationMessageFor(model => model.DonGia, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.SoLuong, "Số lượng", new { @class = "form-label" })
                    @Html.TextBoxFor(m => m.SoLuong, new { @class = "form-control", @type = "number", @min = "1", @id = "SoLuong" })
                    @Html.ValidationMessageFor(model => model.SoLuong, "", new { @class = "text-danger" })
                </div>

                <div class="form-group radio-group">
                    @Html.Label("Loại bạc :")
                    <label>
                        @Html.RadioButtonFor(m => m.LoaiBac, "Italy") Italy
                    </label>
                    <label>
                        @Html.RadioButtonFor(m => m.LoaiBac, "Thailand") Thailand
                    </label>
                </div>
            </div>

            <div class="col-md-6">
                <div class="mb-3">
                    @Html.LabelFor(model => model.MaLoaiSP, "Loại sản phẩm", new { @class = "form-label" })
                    @Html.DropDownListFor(model => model.MaLoaiSP, ViewBag.MaLoaiSP as SelectList, "Chọn danh mục", new { @class = "form-select" })
                    @Html.ValidationMessageFor(model => model.MaLoaiSP, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.Label("Ảnh sản phẩm", new { @class = "form-label" })
                    <input type="file" name="AnhSanPhamUpload" class="form-control" />
                    @if (!string.IsNullOrEmpty(Model.AnhSanPham))
                    {
                        <p class="mt-2">Ảnh hiện tại:</p>
                        <img src="~/images/@Model.AnhSanPham" alt="Ảnh sản phẩm" class="img-thumbnail" style="max-height: 200px;" />
                    }
                </div>

                @*<div class="mb-3">
                        @Html.LabelFor(model => model.NgayTao, new { @class = "form-label" })
                        @Html.TextBoxFor(model => model.NgayTao, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                    </div>*@
            </div>
        </div>

        <div class="text-center mt-4">
            <div class="d-inline-flex gap-2">
                <button type="button" class="btn-submit" data-bs-toggle="modal" data-bs-target="#confirmOrderModal" data-action="save">
                    <i class="fa-solid fa-check"></i> Lưu thông tin
                </button>
                <a href="javascript:void(0)" class="btn-cancel text-decoration-none" data-bs-toggle="modal" data-bs-target="#confirmOrderModal" data-action="cancel">
                    Hủy
                </a>
            </div>
        </div>
        <div class="modal fade" id="confirmOrderModal" tabindex="-1" aria-labelledby="confirmOrderModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="confirmOrderModalLabel"></h5>
                    </div>
                    <div class="modal-body"></div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                        <button type="button" id="btnConfirmOrder" class="btn modal-btn">Xác nhận</button>
                    </div>
                </div>
            </div>
        </div>
    }
</div>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const donGiaInput = document.getElementById("DonGia");
        const soLuongInput = document.getElementById("SoLuong");

        if (donGiaInput) {
            donGiaInput.addEventListener("input", function () {
                this.value = this.value.replace(/[^0-9]/g, "");
            });
        }

        if (soLuongInput) {
            soLuongInput.addEventListener("input", function () {
                this.value = this.value.replace(/[^0-9]/g, "");
            });
        }
    });

    $(document).ready(function () {
        $('#confirmOrderModal').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget);
            var action = button.data('action');
            var modal = $(this);

            if (action === 'save') {
                modal.find('.modal-title').text('Xác nhận lưu thông tin');
                modal.find('.modal-body').text('Bạn có chắc chắn muốn lưu thông tin này?');
                $('#btnConfirmOrder').text('Lưu thông tin');
            } else if (action === 'cancel') {
                modal.find('.modal-title').text('Xác nhận hủy');
                modal.find('.modal-body').text('Bạn có chắc chắn muốn hủy?');
                $('#btnConfirmOrder').text('Xác nhận');
            }

            $('#btnConfirmOrder').off('click').on('click', function () {
                toastr.options = {
                    "closeButton": true,
                    "progressBar": true,
                    "positionClass": "toast-bottom-right",
                    "timeOut": 1000
                };
            if (action === 'save') {
                toastr.success('Lưu thành công! Đang chuyển trang...');
                setTimeout(function () {
                    $('form').submit();
                }, 1000);
            } else if (action === 'cancel') {
                toastr.info('Đã hủy! Đang quay lại...');
                setTimeout(function () {
                    window.location.href = '@Url.Action("QLSP", "San_pham")';
                }, 1000);
            }
            modal.modal('hide');
            });
        });
    });
</script>