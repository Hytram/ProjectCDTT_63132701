@model ProjectCDTT_63132701.Models.VanChuyen

@{
    ViewBag.Title = "Chỉnh sửa vận chuyển";
    Layout = "~/Views/shared/_LayoutAdmin.cshtml";
}

<head>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <link rel="stylesheet" href="~/Content/create.css" />
</head>

<div class="form-wrapper">
    <a href="javascript:history.back()" class="back-button">
        <i class="fa-solid fa-chevron-left"></i> Quay lại
    </a>
    <h2 class="mb-4">Chỉnh sửa vận chuyển</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <!-- Giữ lại các giá trị không sửa đổi -->
        @Html.HiddenFor(model => model.MaVanChuyen)
        @Html.HiddenFor(model => model.MaDH)
        @Html.HiddenFor(model => model.TrangThai)
        @Html.HiddenFor(model => model.NgayTao)

        <div class="row">
            <div class="col-md-6">
                <div class="mb-3">
                    @Html.LabelFor(model => model.MaDH, "Mã đơn hàng", new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.MaDH, null, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.MaDH, "", new { @class = "text-danger" })
                </div>
                <div class="mb-3">
                    @Html.LabelFor(model => model.TrangThai, "Trạng thái", new { @class = "form-label" })
                    <p class="form-control-plaintext">
                        @if (Model.TrangThai == "Pending")
                        {
                            @:Chưa duyệt
                        }
                        else if (Model.TrangThai == "Shipping")
                        {
                            @:Chờ Vận chuyển
                        }
                        else
                        {
                            @Model.TrangThai
                        }
                    </p>

                </div>
                <div class="mb-3">
                    @Html.LabelFor(model => model.DonViVanChuyen, "Đơn vị vận chuyển", new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.DonViVanChuyen, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.DonViVanChuyen, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.TrangThai, "Trạng thái", new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.TrangThai, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.TrangThai, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-6">
                <div class="mb-3">
                    @Html.LabelFor(model => model.NgayTao, "Ngày tạo", new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.NgayTao, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.NgayTao, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.ThoiGianGiao, "Thời gian giao", new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.ThoiGianGiao, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                    @Html.ValidationMessageFor(model => model.ThoiGianGiao, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.ThoiGianNhan, "Thời gian nhận", new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.ThoiGianNhan, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                    @Html.ValidationMessageFor(model => model.ThoiGianNhan, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="text-center mt-4">
            <div class="d-inline-flex gap-2">
                <button type="button" class="btn-submit" data-bs-toggle="modal" data-bs-target="#confirmOrderModal" data-action="save">
                    <i class="fa-solid fa-check"></i> Lưu thông tin
                </button>

                @Html.ActionLink("Hủy", "QLVC", null, new { @class = " btn-cancel text-decoration-none" })
            </div>
        </div>
        <div class="modal fade" id="confirmOrderModal" tabindex="-1" aria-labelledby="confirmOrderModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="confirmOrderModalLabel"></h5>
                    </div>
                    <div class="modal-body"></div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                        <button type="button" id="btnConfirmOrder" class="btn btn-primary">Xác nhận</button>
                    </div>
                </div>
            </div>
        </div>
    }
</div>
<script>
    $(document).ready(function () {
    $('#confirmOrderModal').on('show.bs.modal', function (event) {
        var button = $(event.relatedTarget);
        var action = button.data('action');
        var modal = $(this);

        if (action === 'save') {
            modal.find('.modal-title').text('Xác nhận lưu thông tin');
            modal.find('.modal-body').text('Bạn có chắc chắn muốn lưu thông tin này?');
            $('#btnConfirmOrder').text('Lưu thông tin');
        } else if (action === 'cancel') {
            modal.find('.modal-title').text('Xác nhận hủy');
            modal.find('.modal-body').text('Bạn có chắc chắn muốn hủy?');
            $('#btnConfirmOrder').text('Xác nhận');
        }

        $('#btnConfirmOrder').off('click').on('click', function () {
            toastr.options = {
                "closeButton": true,
                "progressBar": true,
                "positionClass": "toast-bottom-right",
                "timeOut": 1000
            };
            if (action === 'save') {
                toastr.success('Lưu thành công! Đang chuyển trang...');
                setTimeout(function () {
                    $('form').submit();
                }, 1000);
            } else if (action === 'cancel') {
                toastr.info('Đã hủy! Đang quay lại...');
                setTimeout(function () {
                    window.location.href = '@Url.Action("QLVC", "Van_chuyen")';
                }, 1000);
            }
            modal.modal('hide');
        });
    });
});

</script>

